import streamlit as st

# Simulaci√≥n de usuarios registrados
USERS = {
    "admin": "1234",
    "usuario1": "contrase√±a123",
}

# Configuraci√≥n de la sesi√≥n
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False
    st.session_state.username = ""
if "pantalla" not in st.session_state:
    st.session_state.pantalla = "login"  # Inicia en la pantalla de login

# Aplicar CSS para cambiar el color del bot√≥n
st.markdown(
    """
    <style>
    div.stButton > button {
        color: black !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def login():
    """Funci√≥n para manejar el inicio de sesi√≥n"""
    st.title("üîê Inicio de Sesi√≥n")

    # Campos de inicio de sesi√≥n
    username = st.text_input("Usuario")
    password = st.text_input("Contrase√±a", type="password")

    # Bot√≥n de iniciar sesi√≥n
    if st.button("Iniciar sesi√≥n"):
        if username in USERS and USERS[username] == password:
            st.session_state.logged_in = True
            st.session_state.username = username
            st.session_state.pantalla = "crear_habito"  # Cambia la pantalla
            st.experimental_rerun()  # Recarga para reflejar el cambio
        else:
            st.error("‚ùå Usuario o contrase√±a incorrectos")

# Control de flujo: decidir qu√© pantalla mostrar
if st.session_state.pantalla == "login":
    login()
elif st.session_state.pantalla == "crear_habito":
    import crear_habito  # Llamar la pantalla de creaci√≥n de h√°bitos

