import streamlit as st

# Simulaci√≥n de usuarios registrados
USERS = {
    "admin": "1234",
    "usuario1": "contrase√±a123",
}

# Variables de sesi√≥n
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False
    st.session_state.username = ""

if "screen" not in st.session_state:
    st.session_state.screen = "login"  # Pantalla inicial es el login

# Fondo con la imagen y el color de texto blanco
page_bg_img = """
<style>
[data-testid="stAppViewContainer"] {
    background-image: url("https://img.freepik.com/foto-gratis/personas-que-toman-clases-pilates-reformador_23-2151093272.jpg?t=st=1738638246~exp=1738641846~hmac=c98b8738e3217cfda46863036a62ca7f8745ab9d61d03d3e99de187a0da9ea6a&w=2000");
    background-size: cover;
    color: white;
}

[data-testid="stHeader"] {
    background-color: rgba(0, 0, 0, 0);
}

[data-testid="stToolbar"] {
    right: 2rem;
}

h1, h2, h3, h4, h5, h6, p {
    color: white;
}
</style>
"""

st.markdown(page_bg_img, unsafe_allow_html=True)

# Funci√≥n de login
def login():
    st.title("üîê Inicio de Sesi√≥n")

    # Campos de inicio de sesi√≥n
    username = st.text_input("Usuario")
    password = st.text_input("Contrase√±a", type="password")

    # Bot√≥n de iniciar sesi√≥n
    if st.button("Iniciar sesi√≥n"):
        if username in USERS and USERS[username] == password:
            st.session_state.logged_in = True
            st.session_state.username = username
            st.session_state.screen = "crear_habito"  # Cambiar a la pantalla de crear h√°bito
        else:
            st.error("‚ùå Usuario o contrase√±a incorrectos")

# Funci√≥n de creaci√≥n de h√°bito
def crear_habito():
    """Pantalla para crear un nuevo h√°bito"""
    st.title("üìÖ Crear Nuevo H√°bito")

    # Nombre del h√°bito
    habit_name = st.text_input("¬øQu√© h√°bito deseas crear?", "")

    # Selecci√≥n de d√≠as de la semana
    st.write("Selecciona los d√≠as de la semana para realizar tu h√°bito:")
    days_of_week = ["L", "M", "X", "J", "V", "S", "D"]
    selected_days = []

    # Crear botones para seleccionar los d√≠as
    for day in days_of_week:
        if st.button(day, key=day):
            selected_days.append(day)

    # Sanci√≥n
    sanction = st.text_area("Escribe una sanci√≥n si no realizas el h√°bito:")

    # Aceptar y guardar el h√°bito
    if st.button("Aceptar"):
        if habit_name and selected_days and sanction:
            new_habit = {
                "name": habit_name,
                "days": selected_days,
                "sanction": sanction
            }
            if "habitos" not in st.session_state:
                st.session_state.habitos = []
            st.session_state.habitos.append(new_habit)
            st.session_state.screen = "dashboard"  # Cambiar a la pantalla de dashboard

# Funci√≥n de dashboard
def dashboard():
    """Pantalla de Dashboard"""
    st.title("üìä Dashboard de H√°bitos")

    # Si no hay h√°bitos, mostrar mensaje
    if not st.session_state.habitos:
        st.write("No tienes h√°bitos registrados a√∫n.")
    else:
        # Mostrar todos los h√°bitos
        for habit in st.session_state.habitos:
            st.write(f"**H√°bito**: {habit['name']}")
            st.write(f"**D√≠as**: {', '.join(habit['days'])}")
            st.write(f"**Sanci√≥n**: {habit['sanction']}")
            st.write("---")

    if st.button("Crear nuevo h√°bito"):
        st.session_state.screen = "crear_habito"  # Volver a la pantalla de creaci√≥n de h√°bitos

# Control de flujo de la aplicaci√≥n
if st.session_state.screen == "login":
    login()
elif st.session_state.screen == "crear_habito":
    crear_habito()
elif st.session_state.screen == "dashboard":
    dashboard()
